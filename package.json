{
  "name": "user-accounts-express",
  "version": "1.0.0",
  "description": "Almost every app I build needs to manage user accounts. Onboarding users, authenticating users, letting users update their profiles, reset their password when the user forets it, grant the user permissions, control access to resources based on permissions and on resource ownership. In this project I attempt a best practice implementation using [Passport](http://www.passportjs.org/).",
  "main": "index.js",
  "engines": {
    "node": "14"
  },
  "scripts": {
    "start": "node index.js",
    "r": "nodemon index.js",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/davidjohnmaccallum/user-accounts-express.git"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/davidjohnmaccallum/user-accounts-express/issues"
  },
  "homepage": "https://github.com/davidjohnmaccallum/user-accounts-express#readme",
  "dependencies": {
    "bcrypt": "^4.0.1",
    "body-parser": "^1.20.1",
    "colors": "^1.4.0",
    "connect-flash": "^0.1.1",
    "cookie-parser": "^1.4.5",
    "express": "^4.18.2",
    "express-session": "^1.17.1",
    "express-validator": "^6.4.0",
    "getenv": "^1.0.0",
    "mongodb": "^3.5.6",
    "morgan": "^1.10.0",
    "passport": "^0.4.1",
    "passport-facebook": "^3.0.0",
    "passport-google-oauth": "^2.0.0",
    "passport-local": "^1.0.0",
    "pug": "^2.0.4"
  },
  "devDependencies": {
    "eslint": "^6.8.0",
    "nodemon": "^2.0.3"
  }
}
